{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/USER/Desktop/frontEnd-DevWeek/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/USER/Desktop/frontEnd-DevWeek/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\frontEnd-DevWeek\\\\pages\\\\secret\\\\[id].js\";\nimport AdminSecretHeader from '../../src/Headers/AdminSecretHeader';\n\nfunction Secret(_ref) {\n  var participants = _ref.participants,\n      hasDrew = _ref.hasDrew,\n      isAdmin = _ref.isAdmin;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isAdmin && /*#__PURE__*/_jsxDEV(AdminSecretHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n}\n\n_c = Secret;\nexport function getServiceSideProps(_x) {\n  return _getServiceSideProps.apply(this, arguments);\n}\n\nfunction _getServiceSideProps() {\n  _getServiceSideProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              props: {\n                participants: [],\n                hasDrew: false,\n                isAdmin: true\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getServiceSideProps.apply(this, arguments);\n}\n\nexport default Secret;\n\nvar _c;\n\n$RefreshReg$(_c, \"Secret\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/frontEnd-DevWeek/pages/secret/[id].js"],"names":["AdminSecretHeader","Secret","participants","hasDrew","isAdmin","getServiceSideProps","context","props"],"mappings":";;;;;AACA,OAAOA,iBAAP,MAA8B,qCAA9B;;AAEA,SAASC,MAAT,OAAqD;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACnD,sBACE;AAAA,cAEIA,OAAO,iBAAI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAFf,mBADF;AAOD;;KARQH,M;AAUT,gBAAsBI,mBAAtB;AAAA;AAAA;;;kFAAO,iBAAmCC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,6CACE;AACLC,cAAAA,KAAK,EAAE;AACLL,gBAAAA,YAAY,EAAE,EADT;AAELC,gBAAAA,OAAO,EAAE,KAFJ;AAGLC,gBAAAA,OAAO,EAAE;AAHJ;AADF,aADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWP,eAAeH,MAAf","sourcesContent":["\r\nimport AdminSecretHeader from '../../src/Headers/AdminSecretHeader'\r\n\r\nfunction Secret ({ participants, hasDrew, isAdmin }) {\r\n  return (\r\n    <>\r\n      {\r\n        isAdmin && <AdminSecretHeader/>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport async function getServiceSideProps(context) {\r\n  return {\r\n    props: {\r\n      participants: [],\r\n      hasDrew: false,\r\n      isAdmin: true\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Secret"]},"metadata":{},"sourceType":"module"}