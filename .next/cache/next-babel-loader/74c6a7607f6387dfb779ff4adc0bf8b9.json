{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\frontEnd-DevWeek\\\\pages\\\\secret\\\\[id].js\";\nimport AdminSecretHeader from '../../src/components/Headers/AdminSecretHeader';\nimport SecretHeader from '../../src/components/Headers/SecretHeader';\nimport Participants from '../../src/components/Participants';\n\nfunction Secret(_ref) {\n  var participants = _ref.participants,\n      hasDrew = _ref.hasDrew,\n      isAdmin = _ref.isAdmin;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isAdmin && /*#__PURE__*/_jsxDEV(AdminSecretHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 20\n    }, this), !isAdmin && /*#__PURE__*/_jsxDEV(SecretHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Secret;\nexport var __N_SSP = true;\nexport default Secret;\n\nvar _c;\n\n$RefreshReg$(_c, \"Secret\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/frontEnd-DevWeek/pages/secret/[id].js"],"names":["AdminSecretHeader","SecretHeader","Participants","Secret","participants","hasDrew","isAdmin"],"mappings":";;;AACA,OAAOA,iBAAP,MAA8B,gDAA9B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;;AAEA,SAASC,MAAT,OAAqD;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACnD,sBACE;AAAA,eAEIA,OAAO,iBAAI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAFf,EAKI,CAACA,OAAD,iBAAY,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YALhB;AAAA,kBADF;AAUD;;KAXQH,M;;AAwBT,eAAeA,MAAf","sourcesContent":["\r\nimport AdminSecretHeader from '../../src/components/Headers/AdminSecretHeader'\r\nimport SecretHeader from '../../src/components/Headers/SecretHeader'\r\nimport Participants from '../../src/components/Participants'\r\n\r\nfunction Secret ({ participants, hasDrew, isAdmin }) {\r\n  return (\r\n    <>\r\n      {\r\n        isAdmin && <AdminSecretHeader/>\r\n      }\r\n      { \r\n        !isAdmin && <SecretHeader/>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  return {\r\n    props: {\r\n      participants: [],\r\n      hasDrew: false,\r\n      isAdmin: false\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Secret"]},"metadata":{},"sourceType":"module"}